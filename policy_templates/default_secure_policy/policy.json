{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "13631773772603572782"
    }
  },
  "parameters": {
    "policyConfigurations": {
      "type": "object",
      "defaultValue": {
        "policyBlockVmSkus": {
          "name": "pol-sandbox-vm-001",
          "metadata": {
            "version": "0.1.0",
            "category": "category",
            "source": "source"
          }
        },
        "policyBlockIncorrectLocations": {
          "name": "pol-sandbox-loc-002",
          "metadata": {
            "version": "0.1.0",
            "category": "category",
            "source": "source"
          }
        },
        "policyBlockResourceTypes": {
          "name": "pol-sandbox-res-003",
          "metadata": {
            "version": "0.1.0",
            "category": "category",
            "source": "source"
          }
        },
        "policyBlockAppServiceSkus": {
          "name": "pol-sandbox-app-004",
          "metadata": {
            "version": "0.1.0",
            "category": "category",
            "source": "source"
          }
        }
      }
    },
    "allowedSkus": {
      "type": "array",
      "defaultValue": [
        "Standard_B1ls",
        "Standard_A0",
        "Basic_A0",
        "Standard_B1s",
        "Standard_A1",
        "Basic_A1",
        "Standard_B1ms",
        "Standard_A1_v2",
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D1",
        "Standard_DS1",
        "Standard_A2",
        "Basic_A2",
        "Standard_B2s",
        "Standard_A2_v2"
      ]
    },
    "allowedLocations": {
      "type": "array",
      "defaultValue": [
        "westeurope",
        "uksouth"
      ]
    },
    "allowedResources": {
      "type": "array",
      "defaultValue": [
        "Microsoft.Storage/*"
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}', parameters('policyConfigurations').policyBlockVmSkus.name)]",
      "properties": {
        "displayName": "[format('[{0}] BlockVmSkus', parameters('policyConfigurations').policyBlockVmSkus.name)]",
        "policyType": "Custom",
        "mode": "All",
        "description": "Policy to whitelist virtual machines SKUs",
        "metadata": "[parameters('policyConfigurations').policyBlockVmSkus.metadata]",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "not": {
                  "field": "Microsoft.Compute/virtualMachines/properties/priority",
                  "equals": "Spot"
                }
              },
              {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              {
                "not": {
                  "field": "Microsoft.Compute/virtualMachines/sku.name",
                  "in": "[parameters('allowedSkus')]"
                }
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[format('{0}', parameters('policyConfigurations').policyBlockIncorrectLocations.name)]",
      "properties": {
        "displayName": "[format('[{0}] BlockIncorrectLocations', parameters('policyConfigurations').policyBlockIncorrectLocations.name)]",
        "policyType": "Custom",
        "mode": "All",
        "description": "Policy to whitelist regions",
        "metadata": "[parameters('policyConfigurations').policyBlockIncorrectLocations.metadata]",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "not": {
                  "field": "location",
                  "in": "[parameters('allowedLocations')]"
                }
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[parameters('policyConfigurations').policyBlockResourceTypes.name]",
      "properties": {
        "displayName": "[format('[{0}] BlockResourceTypes', parameters('policyConfigurations').policyBlockResourceTypes.name)]",
        "policyType": "Custom",
        "mode": "All",
        "description": "Policy to whitelist resource types",
        "metadata": "[parameters('policyConfigurations').policyBlockResourceTypes.metadata]",
        "policyRule": {
          "if": {
            "copy": [
              {
                "name": "allOf",
                "count": "[length(parameters('allowedResources'))]",
                "input": {
                  "not": {
                    "field": "type",
                    "like": "[parameters('allowedResources')[copyIndex('allOf')]]"
                  }
                }
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2020-09-01",
      "name": "[parameters('policyConfigurations').policyBlockAppServiceSkus.name]",
      "properties": {
        "displayName": "[format('[{0}] BlockAppServiceSkus', parameters('policyConfigurations').policyBlockAppServiceSkus.name)]",
        "policyType": "Custom",
        "mode": "All",
        "description": "[format('Policy to block creation of resources if they are not one of the following: {0}', parameters('allowedResources'))]",
        "metadata": {
          "version": "0.1.0",
          "category": "category",
          "source": "source"
        },
        "policyRule": {
          "if": {
            "allOf": [
              {
                "not": {
                  "field": "type",
                  "in": "[parameters('allowedResources')]"
                }
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2020-09-01",
      "name": "poli-sandbox-001",
      "properties": {
        "displayName": "[poli-sandbox-001] PolicyInitiative",
        "policyType": "Custom",
        "description": "Policy initiative for Sandbox Management Group",
        "metadata": {
          "version": "0.1.0",
          "category": "category",
          "source": "source"
        },
        "policyDefinitions": [
          {
            "policyDefinitionId": "[format('{0}', extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyConfigurations').policyBlockResourceTypes.name))]",
            "policyDefinitionReferenceId": ""
          },
          {
            "policyDefinitionId": "[format('{0}', extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', format('{0}', parameters('policyConfigurations').policyBlockIncorrectLocations.name)))]",
            "policyDefinitionReferenceId": ""
          },
          {
            "policyDefinitionId": "[format('{0}', extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', format('{0}', parameters('policyConfigurations').policyBlockVmSkus.name)))]",
            "policyDefinitionReferenceId": ""
          }
        ]
      },
      "dependsOn": [
        "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', format('{0}', parameters('policyConfigurations').policyBlockIncorrectLocations.name))]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('policyConfigurations').policyBlockResourceTypes.name)]",
        "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', format('{0}', parameters('policyConfigurations').policyBlockVmSkus.name))]"
      ]
    }
  ]
}